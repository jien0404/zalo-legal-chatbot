# frontend/components/sidebar.py
import streamlit as st
from services.api_client import get_conversations_from_api, delete_conversation_on_api, update_conversation_title_on_api
from style import inject_custom_css 

def render_sidebar(authenticator, username):
    # T·∫£i CSS ngay t·ª´ ƒë·∫ßu
    inject_custom_css()

    with st.sidebar:
        # --- Ph·∫ßn th√¥ng tin ng∆∞·ªùi d√πng ---
        with st.container():
            st.markdown(f"#### Ch√†o, *{username}*")
            authenticator.logout("Logout", "main")
        
        st.markdown("---", unsafe_allow_html=True)

        # --- N√∫t t·∫°o cu·ªôc tr√≤ chuy·ªán m·ªõi ---
        if st.button("‚ûï Cu·ªôc tr√≤ chuy·ªán m·ªõi", use_container_width=True):
            st.session_state.conversation_id = None 
            st.session_state.messages = [{"role": "assistant", "content": "Xin ch√†o! T√¥i c√≥ th·ªÉ gi√∫p g√¨ m·ªõi cho b·∫°n?"}]
            if 'editing_convo_id' in st.session_state:
                del st.session_state.editing_convo_id
            st.rerun()

        st.markdown("---", unsafe_allow_html=True)
        st.markdown("#### L·ªãch s·ª≠ tr√≤ chuy·ªán")
        
        conversations = get_conversations_from_api(username)
        editing_convo_id = st.session_state.get('editing_convo_id')

        # D√πng st.empty ƒë·ªÉ ch·ª©a danh s√°ch, gi√∫p giao di·ªán m∆∞·ª£t h∆°n khi c·∫≠p nh·∫≠t
        history_container = st.empty()
        
        with history_container.container():
            for convo in conversations:
                is_active = (st.session_state.get("conversation_id") == convo['id'])
                
                # Ch·∫ø ƒë·ªô ch·ªânh s·ª≠a
                if editing_convo_id == convo['id']:
                    with st.form(key=f"edit_form_{convo['id']}"):
                        st.markdown('<div class="edit-form">', unsafe_allow_html=True)
                        new_title = st.text_input("ƒê·ªïi t√™n:", value=convo['title'], label_visibility="collapsed")
                        
                        col1, col2 = st.columns(2)
                        with col1:
                            if st.form_submit_button("L∆∞u", use_container_width=True, type="primary"):
                                if new_title.strip():
                                    update_conversation_title_on_api(username, convo['id'], new_title.strip())
                                    del st.session_state.editing_convo_id
                                    st.rerun()
                                else:
                                    st.warning("Ti√™u ƒë·ªÅ kh√¥ng ƒë∆∞·ª£c tr·ªëng.")
                        with col2:
                            if st.form_submit_button("H·ªßy", use_container_width=True):
                                del st.session_state.editing_convo_id
                                st.rerun()
                else:
                    # Ch·∫ø ƒë·ªô hi·ªÉn th·ªã b√¨nh th∆∞·ªùng (ƒê√É S·ª¨A)
                    active_class = "active" if is_active else ""
                    
                    # B·ªçc to√†n b·ªô trong m·ªôt container markdown ƒë·ªÉ √°p d·ª•ng CSS
                    st.markdown(f'<div class="chat-history-item {active_class}">', unsafe_allow_html=True)

                    # S·ª≠ d·ª•ng M·ªòT L·∫¶N st.columns duy nh·∫•t v·ªõi vertical_alignment="center"
                    # ƒê√¢y l√† thay ƒë·ªïi quan tr·ªçng nh·∫•t ƒë·ªÉ cƒÉn ch·ªânh m·ªçi th·ª© th·∫≥ng h√†ng
                    col1, col2, col3 = st.columns([0.7, 0.15, 0.15], vertical_alignment="center")

                    with col1:
                        # N√∫t ti√™u ƒë·ªÅ
                        if st.button(convo['title'], key=f"select_{convo['id']}", use_container_width=True):
                            st.session_state.conversation_id = convo['id']
                            st.session_state.load_conversation = True
                            if 'editing_convo_id' in st.session_state:
                                del st.session_state.editing_convo_id
                            st.rerun()

                    # ƒê·∫∑t c√°c n√∫t S·ª≠a v√† X√≥a v√†o container ri√™ng ƒë·ªÉ CSS c√≥ th·ªÉ ·∫©n/hi·ªán ch√∫ng
                    with st.container():
                        st.markdown('<div class="chat-item-buttons">', unsafe_allow_html=True)
                        
                        with col2:
                            # N√∫t s·ª≠a
                            if st.button("‚úèÔ∏è", key=f"edit_{convo['id']}", help="S·ª≠a ti√™u ƒë·ªÅ"):
                                st.session_state.editing_convo_id = convo['id']
                                st.rerun()
                        
                        with col3:
                            # N√∫t x√≥a
                            if st.button("üóëÔ∏è", key=f"delete_{convo['id']}", help="X√≥a cu·ªôc tr√≤ chuy·ªán"):
                                delete_conversation_on_api(username, convo['id'])
                                if st.session_state.get("conversation_id") == convo['id']:
                                    st.session_state.conversation_id = None
                                    st.session_state.messages = [{"role": "assistant", "content": "Xin ch√†o! T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?"}]
                                if 'editing_convo_id' in st.session_state:
                                    del st.session_state.editing_convo_id
                                st.rerun()
                        